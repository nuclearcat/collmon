version: '3.5'
services:
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.121.0
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - ./vmagentdata:/vmagentdata
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--promscrape.config=/etc/prometheus/prometheus.yml'
      - '--remoteWrite.url=http://victoriametrics:8428/api/v1/write'
    networks:
      - vm_net
    restart: always
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.121.0
    expose:
      - 8428
      - 8089
      - 8089/udp
      - 2003
      - 2003/udp
      - 4242
    volumes:
      - ./vmdata:/storage
    command:
      - '--storageDataPath=/storage'
      - '--graphiteListenAddr=:2003'
      - '--opentsdbListenAddr=:4242'
      - '--httpListenAddr=:8428'
      - '--influxListenAddr=:8089'
      - '-retentionPeriod=3'
    networks:
      - vm_net
    restart: always
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on:
      - "victoriametrics"
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./provisioning/:/etc/grafana/provisioning/
#      - ./dashboards/victoriametrics.json:/var/lib/grafana/dashboards/vm.json
#      - ./dashboards/vmagent.json:/var/lib/grafana/dashboards/vmagent.json
#      - ./dashboards/vmalert.json:/var/lib/grafana/dashboards/vmalert.json
    networks:
      - vm_net
    restart: always
  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert:v1.121.0
    depends_on:
      - "victoriametrics"
      - "alertmanager"
    ports:
      - 8880:8880
    volumes:
      - ./alerts.yml:/etc/alerts/alerts.yml
    command:
      - '--datasource.url=http://victoriametrics:8428/'
      - '--remoteRead.url=http://victoriametrics:8428/'
      - '--remoteWrite.url=http://victoriametrics:8428/'
      - '--notifier.url=http://alertmanager:9093/'
      - '--rule=/etc/alerts/*.yml'
      # display source of alerts in grafana
      - '-external.url=http://127.0.0.1:3000' #grafana outside container
      - '--external.alert.source=explore?orgId=1&left=["now-1h","now","VictoriaMetrics",{"expr":"{{$$expr|quotesEscape|crlfEscape|queryEscape}}"},{"mode":"Metrics"},{"ui":[true,true,true,"none"]}]' ## when copypaste the line be aware of '$$' for escaping in '$expr'    networks:
    networks:
      - vm_net
    restart: always

  alertmanager:
    container_name: alertmanager
    image:  prom/alertmanager
    volumes:
      - ./alertmanager.yml:/config/alertmanager.yml
    command:
      - '--config.file=/config/alertmanager.yml'
    ports:
      - 9093:9093
    networks:
      - vm_net
    restart: always

  #collectd:
  #  container_name: collectd
  #  image:  nuclearcat/collectd
  #  depends_on:
  #    - "victoriametrics"
  #  volumes:
  #    - ./collectd:/etc/collectd
  #  command:
  #    - '/.docker/run.sh'
  #  ports:
  #    - 25826:25826/udp
  #  networks:
  #    - vm_net
  #  restart: always

  blackboxexporter:
    container_name: blackboxexporter
    privileged: true
    image: prom/blackbox-exporter
    depends_on:
      - "victoriametrics"
    ports:
      - 9115:9115
    volumes:
      - ./blackbox-exporter:/config
    command: 
      - '--config.file=/config/blackbox.yml'
    networks:
      - vm_net

  usnmpexporter:
    container_name: usnmpexporter
    image: nuclearcat/usnmp_exporter
    depends_on:
      - "victoriametrics"
    restart: always
    volumes:
      - './usnmp_exporter:/etc/usnmp_exporter'
    command:
      - '/usr/local/bin/usnmp_exporter'
      - '-config=/etc/usnmp_exporter/usnmp_exporter.yml'
      - '-verbose'
    networks:
      - vm_net


  sflowdecode:
    container_name: sflowdecode
    image: nuclearcat/sflow-decode
    depends_on:
      - "victoriametrics"
    restart: always
    volumes:
      - './sflowdecode:/sflowdecode'
    entrypoint:
      - '/usr/local/bin/sflow-decode'
      - '-r'
      - '/sflowdecode/ruleset_production'
      - '-l'
      - '9099'
      - '-d'
#      - '-v'
    ports:
      - 6343:6343/udp
    networks:
      - vm_net


networks:
  vm_net:
volumes:
  grafanadata: {}
